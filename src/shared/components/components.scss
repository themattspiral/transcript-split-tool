.badge {
  display: flex;
  align-items: center;
  justify-content: center;
  max-width: fit-content;
  max-height: fit-content;

  color: #fff;
  font-weight: 700;
  font-size: 10px;
  line-height: 10px;
  padding: 2px 5px;
  user-select: none;

  background-color: var(--color-badge);

  border: 0;
  border-top-left-radius: var(--radius-xl);
  border-bottom-left-radius: var(--radius-xl);
  border-top-right-radius: var(--radius-xl);
  border-bottom-right-radius: var(--radius-xl);

  &.line-number {
    max-width: unset;
    max-height: unset;
    width: 25px;
    padding: 2px 0;
    margin: 0 3px 0 0;
  }

  &.large {
    font-size: 14px;
    line-height: 14px;
    padding: 3px 10px;

    &.line-number {
      width: 35px;
      padding: 3px 0;
      margin: 0 5px 0 0;
    }
  }
}

.curved-arrow {
  &.phrase-link {
    align-self: flex-start;
    margin-left: 10px;
    margin-right: 3px;
  }

  &.mirror-x {
    transform: scaleX(-1);
  }

  &.mirror-y {
    transform: scaleY(-1);
  }
}

.span-bubble {
  font-family: var(--font-mono);

  /* SpanType.Repetition */
  &.repetition {
    background-color: var(--color-repetition);

    &.deemphasized {
      background-color: var(--color-repetition-lite);
    }

    &.emphasized {
      background-color: var(--color-repetition-heavy);
    }
  }
  
  /* SpanType.Source */
  &.source {
    background-color: var(--color-source);
    
    &.deemphasized {
      background-color: var(--color-source-lite);
    }

    &.emphasized {
      background-color: var(--color-source-heavy);
    }
  }

  /* SpanType.Overlapping */
  &.overlapping {
    background-color: var(--color-overlapping);

    &.deemphasized {
      background-color: var(--color-overlapping-lite);
    }

    &.emphasized {
      background-color: var(--color-overlapping-heavy);
    }
  }

  /* SpanType.Text */
  &.text {
    /* plaintext spans sit on top of slightly-overlapping phrase & under-edit bubbles */
    z-index: 2;
  }

  &.clickable {
    cursor: pointer;
  }

  &.under-edit {
    border: 2px dashed var(--color-span-border);
    font-weight: 600;

    /* under-edit bubble spans sit on top of phrase bubbles, but not over plaintext */
    z-index: 1;
  }

  /* conditional styling for poetic structure phrase span bubbles */
  &:not(.text):not(.simple) {
    
    &.leftmost {
      border-top-left-radius: var(--radius-xl);
      border-bottom-left-radius: var(--radius-xl);
      padding-left: 4px;

      /* negative margin prevents the extra padding from inserting more space between words
      or letters (which looks unnatural), so it behaves more like a highlight here  */
      margin-left: -4px;
    }
  
    &.rightmost {
      border-top-right-radius: var(--radius-xl);
      border-bottom-right-radius: var(--radius-xl);
      padding-right: 4px;

      /* negative margin prevents the extra padding from inserting more space between words
      or letters (which looks unnatural), so it behaves more like a highlight here */
      margin-right: -4px;
    }

    /* draw a dashed border between immediatly adjacent span bubbles as long as:
         span is NOT under-edit and NOT leftmost (i.e. it is a plain, non-interacted-with span),
        AND does NOT have an under-edit span immediately previous/left (so that we don't get 2 borders) */
    &:not(.under-edit):not(.leftmost):not(.previous-under-edit) {
      border-left: 1px dashed var(--color-span-border);

      /* so that text inside is not right against the dashed border */
      padding-left: 1px;
    }

    /* so that text inside is not right against the dashed border */
    &:not(.rightmost) {
      padding-right: 1px;
    }

    /* remove internal borders in under-edit blocks */
    &.under-edit.previous-under-edit:not(.leftmost) {
      border-left: 0;
    }
    &.under-edit.next-under-edit:not(.rightmost) {
      border-right: 0;
    }
  }

  /* in simple and menu mode, this component is always leftmost & rightmost,
    (i.e. just one lone span), so it always:
      - has rounded corners on both ends
      - has padding on both ends (but NOT negative margins, so that it takes up space) */
  &.simple,
  &.menu {    
    border-top-left-radius: var(--radius-xl);
    border-bottom-left-radius: var(--radius-xl);
    padding-left: 4px;

    border-top-right-radius: var(--radius-xl);
    border-bottom-right-radius: var(--radius-xl);
    padding-right: 4px;
  }

  &.menu {
    /* when used in a react-contexify menu, make sure the text in the span bubble does
       not change colors when hovered and the menu item background changes color */
    color: var(--contexify-item-color) !important;
  }
}

.dropdown {
  .dropdown-button .caret {
    transition: transform 0.15s ease-in;

    &.closed {
      transform: rotate(0deg);
    }

    &.open {
      transform: rotate(180deg);
    }
  }

  .dropdown-menu {
    transition: max-height 0.1s ease-in-out;

    .dropdown-menu-option:not(.selectable) {
      color: var(--color-gray-700);
    }

    .dropdown-menu-option.selectable {
      color: black;
    
      &:hover {
        cursor: pointer;
        color: #fff;
        background-color: var(--contexify-activeItem-bgColor);
      }
    }
  }
}
